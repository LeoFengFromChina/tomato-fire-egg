'use strict';
/**
 * This File is generated by tomato-fire-egg.
 * Author:LeoFeng
 * Date:{{DATE_TIME}}
 */
const Service = require('egg').Service;
class {{PSC_DOC_NAME}}Service extends Service {
    //获取列表
    async index() {
        let result = {};
        result.code = -1;
        result.data = null;
        result.msg = null;
        let record = await this.ctx.model.{{PSC_DOC_NAME}}.find({});
        if (record && record.length > 0) {
            result.code = 0;
            result.data = record;
            result.msg = "find success."
            return result;
        }
        return result;
    }
    
    //创建应用
    async create(entity) {
        let result = {};
        result.code = -1;
        result.data = null;
        result.msg = null;
        console.log('create body:' + JSON.stringify(entity))
        //[T*]创建前，确认不能重复的字段。
        //let record = await this.ctx.model.{{PSC_DOC_NAME}}.find({ 'appId': entity.appId });
        //if (record && record.length > 0) {
        //    console.log('appId already exist.')
        //    result.msg = 'appId already exist.';
        //    return result;
        //}
        await this.ctx.model.{{PSC_DOC_NAME}}.create([entity]).then(res => {
            //新增成功
            result.code = 0;
            result.data = res;
            result.msg = 'create success.'
            console.log('success:' + JSON.stringify(res))
        }, err => {
            result.msg = err;
            console.log('fail:' + JSON.stringify(err))
        })
        return result;
    }

    async show(_id) {

        let result = {};
        result.code = -1;
        result.data = null;
        result.msg = null;
        let record = await this.ctx.model.{{PSC_DOC_NAME}}.findOne({ _id: _id });
        if (record) {
            result.code = 0;
            result.data = record;
            result.msg = "find success."
            return result;
        } else {
            console.log(JSON.stringify(record))
        }
        return result;
    }

    //更新
    async update(entity) {

        let result = {};
        result.code = -1;
        result.data = null;
        result.msg = null;
        let record = await this.ctx.model.{{PSC_DOC_NAME}}.update({ _id: entity._id }, entity);
        console.log('update res:' + record)
        if (record) {
            result.code = 0;
            result.data = record;
            result.msg = "update success."
            return result;
        } else {
            console.log(JSON.stringify(record))
        }
        return result;
    }

    //删除
    async destroy(_id) {
        let result = {};
        result.code = -1;
        result.data = null;
        result.msg = null;
        let record = await this.ctx.model.{{PSC_DOC_NAME}}.remove({ _id: _id });
        console.log('destroy res:' + record)
        if (record) {
            result.code = 0;
            result.data = record;
            result.msg = "destroy success."
            return result;
        } else {
            console.log(JSON.stringify(record))
        }
        return result;
    }
}

module.exports = {{PSC_DOC_NAME}}Service;