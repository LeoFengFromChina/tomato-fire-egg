'use strict';
/**
 * This File is generated by tomato-fire-egg.
 * Author:LeoFeng
 * Date:2020-6-21 13:39:21
 */
const Controller = require('egg').Controller;
// [T*]定义创建接口的请求参数规则
//const createRule = {
//    appName: 'string',
//    appId: 'string',
//    secret: 'string',
//    status: { type: 'enum', values: [0, 1], required: false }
//};
class {{PSC_DOC_NAME}}Controller extends Controller {

    //----------------------------RESTfull API Start---------------------------------

    async index() {
        const { ctx } = this;
        let r = await ctx.service.{{DOC_NAME}}.index();
        ctx.body = r;
    }
    async create() {
        const { ctx } = this;
        // [T*]校验 `ctx.request.body` 是否符合我们预期的格式
        // 如果参数校验未通过，将会抛出一个 status = 422 的异常
        //ctx.validate(createRule, ctx.request.body);

        let r = await ctx.service.{{DOC_NAME}}.create(ctx.request.body);
        ctx.body = r;
    }
    async show() {
        const { ctx } = this;
        let r = await ctx.service.{{DOC_NAME}}.show(ctx.params.id);
        ctx.body = r;
    }
    async update() {
        const { ctx } = this;
        let r = await ctx.service.{{DOC_NAME}}.update(ctx.request.body);
        ctx.body = r;
    }
    async destroy() {
        const { ctx } = this;
        let r = await ctx.service.{{DOC_NAME}}.destroy(ctx.params.id);
        ctx.body = r;
    }
    //----------------------------RESTfull API End---------------------------------
    async query() {
        const { ctx } = this;
        let r = await ctx.paginationQuery('{{PSC_DOC_NAME}}',ctx.request.body);
        ctx.body = r;
    }
}

module.exports = {{PSC_DOC_NAME}}Controller;